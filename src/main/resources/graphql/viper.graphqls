type Vehicle {
	id: ID!,
	type: String!,
	make: String!,
	model: String!,
	year: Int!
	color: String!
	vin: String!
	accidents: [Accident]
}

type Accident {
	id: ID!
	description: String!
	severity: Int!
	date: String!
	votes: Int!
}


type Query {
	#getAllVehicles():[Vehicle!]
	#vehicles(count: Int!):[Vehicle!]
	vehicle(vin: ID):Vehicle
	getVehiclesByMake(make: String):[Vehicle!]
	getVehiclesByYear(year: Int):[Vehicle!]
	getModelsForMake(make: String):[String!]
	getMakesForType(type: String):[String!]
	getAccidents(vin: String!):[Accident]
	#getMakesForYears(start: Int, end: Int):[String!]
	#getTypesForYears(start: Int, end: Int):[String!]
}

type Mutation {
	createVehicle(type: String!, make: String!, model: String!, year: Int!, color: String!, vin: String!): Vehicle
	createAccident(vin: String!, description: String!, severity: Int!, date: String!, votes: Int): Accident
}